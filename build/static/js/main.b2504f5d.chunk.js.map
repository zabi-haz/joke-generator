{"version":3,"sources":["App.js","reudx/actions/action.jsx","reudx/store.jsx","reudx/reducers/reducers.jsx","index.js"],"names":["App","useState","kind","setKind","api","dispatch","useDispatch","fetchingData","a","axios","get","catch","err","Error","responce","console","log","data","type","payload","useEffect","jokeStore","useSelector","state","jokes","className","exact","path","element","onChange","e","target","value","cheack","name","id","to","setup","joke","delivery","onClick","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAsEeA,MA/Df,WAAgB,IAAD,EACYC,mBAAS,eADrB,mBACNC,EADM,KACCC,EADD,KAEPC,EAAG,sCAAkCF,GACrCG,EAAWC,cAETC,EAAY,uCAAG,4BAAAC,EAAA,sEACMC,IACtBC,IAAIN,GACJO,OAAM,SAACC,GACN,MAAMC,MAAM,WAJG,OACXC,EADW,OAMjBC,QAAQC,IAAIF,EAASG,MACrBZ,EClBG,CACHa,KAAM,QACNC,QDgBiBL,EAASG,OACvBH,EAASG,MACVF,QAAQC,IAAIF,EAASG,MATN,2CAAH,qDAkBlBG,qBAAU,WACNb,MACF,CAACH,IAEH,IAAMiB,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAC/C,OACI,cAAC,IAAD,UACF,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,KAAd,4BAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QACpB,sBAAKH,UAAU,WAAf,UACA,yBAAQA,UAAU,KAAKI,SAAU,SAACC,GAAD,OAnBxB,SAACA,GACZf,QAAQC,IAAIc,EAAEC,OAAOC,OACrB7B,EAAQ2B,EAAEC,OAAOC,OAiBuBC,CAAOH,IAAII,KAAK,GAAGC,GAAG,GAA5D,UACI,4DACA,wBAAQH,MAAM,OAAd,kBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,gBAAd,mBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,0BAEJ,cAAC,IAAD,CAAMP,UAAU,WAAWW,GAAG,QAA9B,gCAGF,cAAC,IAAD,CAAOT,KAAK,QAAQC,QAClB,sBAAKH,UAAU,WAAf,UACE,6BAAKJ,EAAUgB,QACf,6BAAKhB,EAAUiB,OACf,6BAAKjB,EAAUkB,WACf,wBAAQC,QAASjC,EAAjB,oC,gBEtDCkC,EAJDC,aCHe,WAA0C,IAAzCnB,EAAwC,uDAAhC,CAACC,MAAM,IAAyB,yCAAnBN,EAAmB,EAAnBA,KAAOC,EAAY,EAAZA,QACtD,OAAOD,GACH,IAAK,QACD,OAAO,2BAAIK,GAAX,IAAmBC,MAAML,IAC7B,QACI,OAAOI,KDAfoB,OAAOC,8BAAgCD,OAAOC,gCEClDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.b2504f5d.chunk.js","sourcesContent":["import {BrowserRouter as Router , Routes , Route , Link} from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { addJoks } from \"./reudx/actions/action\"\nimport { useSelector } from \"react-redux\";\nimport './style/style.css'\nfunction App() {\n  const [kind , setKind] = useState(\"Programming\");\n  const api = `https://v2.jokeapi.dev/joke/${kind}` \n  const dispatch = useDispatch()\n  \n    const fetchingData = async ()=>{\n        const responce = await axios\n        .get(api)\n        .catch((err)=>{\n          throw Error(\"fuck\")\n        })\n        console.log(responce.data);\n        dispatch(addJoks(responce.data))\n        if(responce.data){\n          console.log(responce.data);\n        }\n      }\n\n      const cheack = (e)=>{\n          console.log(e.target.value);\n          setKind(e.target.value)\n      }\n      \n    useEffect(()=>{\n        fetchingData();\n    },[api])\n\n    const jokeStore = useSelector(state => state.jokes)\n  return (\n      <Router>\n    <div className=\"App\">\n      <h2 className=\"h2\">\n        Joke generator\n      </h2>\n        <Routes>\n          <Route exact path=\"/\" element={(\n            <div className=\"main_ask\">\n            <select className=\"se\" onChange={(e)=>cheack(e)} name=\"\" id=\"\">\n                <option >default is programming</option>\n                <option value=\"Dark\">Dark</option>\n                <option value=\"Programming\">programming</option>\n                <option value=\"Miscellaneous\">Music</option>\n                <option value=\"Pun\">Pun</option>\n                <option value=\"Spooky\">Spooky</option>\n                <option value=\"Christmas\">christmas</option>\n            </select>\n            <Link className=\"linkHome\" to=\"/home\">go get a joke</Link>\n        </div>\n          )}></Route>\n          <Route path=\"/home\" element={(          \n            <div className=\"main_ask\">\n              <h2>{jokeStore.setup}</h2>\n              <h2>{jokeStore.joke}</h2>\n              <h2>{jokeStore.delivery}</h2>\n              <button onClick={fetchingData}>new joke</button>\n            </div>\n          )}></Route>\n          </Routes>\n    </div>\n      </Router>\n  );\n}\n\nexport default App;\n","export const addJoks = (jokes) =>{\n    return {\n        type: \"JOKES\",\n        payload: jokes\n    }\n}","import { createStore } from \"redux\";\nimport { jokesReducers } from \"./reducers/reducers\";\n\nconst store = createStore(\n    jokesReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\nexport default store","export const jokesReducers = (state = {jokes:{}}, {type , payload })=>{\n    switch(type){\n        case \"JOKES\":\n            return {...state , jokes:payload}\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './reudx/store';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}